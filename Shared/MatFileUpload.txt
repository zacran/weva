<MatFileUpload 
    Label="@Label"
    OnChange="@FilesReadyForContent">
</MatFileUpload>
<div class="figure-caption">No data or files are transferred. Everything remains in your browser.</div>

@code {
    [Parameter]
    public string Label { get; set; } = "Select or drop file";

    [Parameter]
    public string AcceptedFileTypes { get; set; } = "";

    [Parameter]
    public Object? FileContent { get; set; }

    static readonly List<string> acceptedFileTypes = new List<string> {"mp4", "avi","webm","ogg","mov"};

    protected async Task FilesReadyForContent(IMatFileUploadEntry[] files)
    {
        var file = files.FirstOrDefault();
        Console.WriteLine("File selected:" + JsonSerializer.Serialize(file));

        var fileExtension = file.Name.Split(".").Last();
        
        if(!acceptedFileTypes.Contains(fileExtension)){
            Console.WriteLine("invalid file type");
        }
        
        using (var stream = new MemoryStream()){
            stream.Seek(0, SeekOrigin.Begin);
            using (var reader = new StreamReader(stream))
            {
                FileContent = await reader.ReadToEndAsync();
            }
        }

        await InvokeAsync(StateHasChanged);
    }
}
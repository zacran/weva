# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the master branch
    - uses: actions/checkout@v2.4.2
    
    # sets up .NET Core 
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v2.1
      with:
        dotnet-version: 5.0

    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish Weva.csproj -c Release -o release --nologo
    
    # changes the base-tag in index.html from '/' to 'Weva' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to Weva
      run: sed -i 's/<base href="\/" \/>/<base href="\/Weva\/" \/>/g' release/wwwroot/index.html
    
    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4.3.3
      with:
        branch: gh-pages
        folder: release/wwwroot
        ssh-key: ${{ secrets.DEPLOY_KEY }}
